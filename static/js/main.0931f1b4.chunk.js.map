{"version":3,"sources":["UC.js","Main.js","App.js","index.js"],"names":["UC","React","createContext","initialState","reducer","state","action","type","Provider","children","useReducer","dispatch","random","Math","floor","length","randomEmoji","value","Main","score","useRef","useContext","current","className","console","log","map","e","i","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"kMAGaA,EAAKC,IAAMC,gBAGlBC,EAAe,CAAC,eAAK,eAAK,eAAK,gBAI/BC,EAAU,SAACC,EAAMC,GACnB,OAAQA,EAAOC,MACX,IAAK,MACD,OAAO,YAAIF,KAQVG,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEVC,qBAAWN,EAASD,GAFV,mBAE7BE,EAF6B,KAEtBM,EAFsB,KAI9BC,EAAS,kBAAMP,EAAMQ,KAAKC,MAAMD,KAAKD,SAAWP,EAAMU,UAItDC,EAAc,CAACJ,IAASA,IAASA,KACzC,OACC,mCACA,cAACZ,EAAGQ,SAAJ,CACAS,MAAO,CAAEN,WACLK,YAAYA,GAFhB,SAMKP,OCnCKS,EAAO,WAClB,IAAMC,EAAQC,iBAAO,GADG,EAEOnB,IAAMoB,WAAWrB,GAAzCgB,EAFiB,EAEjBA,YAAYL,EAFK,EAELA,SAInB,OAHIK,EAAY,KAAOA,EAAY,IAAMA,EAAY,KAAKA,EAAY,KACpEG,EAAMG,QAAUH,EAAMG,QAAS,GAG/B,sBAAKC,UAAU,gBAAf,UACA,sBAAKA,UAAU,YAAf,cAA6BC,QAAQC,IAAI,UACxCT,EAAYU,KAAI,SAACC,EAAEC,GAAH,OAAQ,oCAAeD,EAAf,MAAUC,MAEnC,wBAAQC,QAAS,kBAAIlB,EAAS,CAACJ,KAAK,SAApC,wBAEA,2CAAcY,EAAMG,QAApB,WCAWQ,MAZf,WAEE,OACE,sBAAKP,UAAU,OAAf,UACA,oBAAIA,UAAU,SAAd,yBACA,cAAC,EAAD,UACA,cAAC,EAAD,UCNJQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0931f1b4.chunk.js","sourcesContent":["import React, { useReducer } from \"react\"\n\n// Use Context\nexport const UC = React.createContext();\n\n// State\nconst initialState = ['ðŸ¦š','ðŸ¦ƒ','ðŸ’µ','ðŸ’Ž']\n\n\n// Main Function \nconst reducer = (state,action) => {\n    switch (action.type) {\n        case \"REF\" : \n            return [...state];\n        // case \"MATCH\" :\n        //     return {...state,score:state.score+1}\n        default:\n            break;\n    }\n}\n// Provider takes children from App.js\nexport const Provider = ({children}) => {\n    // Reducer Hook \n    const [state, dispatch] = useReducer(reducer, initialState,)\n\n    const random = () => state[Math.floor(Math.random() * state.length)]\n    // const one = random()\n    // const two = random()\n    // const three = random()\n    const randomEmoji = [random(),random(),random()]\n  return (\n   <>\n   <UC.Provider\n   value={{ dispatch,\n       randomEmoji:randomEmoji,\n   }}\n   >\n\n       {children}\n   </UC.Provider>\n   </>\n  )\n}","import React, {useRef} from \"react\"\nimport { UC } from \"./UC\"\n\nexport const Main = () => {\n  const score = useRef(0) // Using UseRef \n  const {randomEmoji,dispatch} = React.useContext(UC)\n  if (randomEmoji[0] === randomEmoji[1] && randomEmoji[1]===randomEmoji[2]) {\n    score.current = score.current +1;\n  };\n  return (\n    <div className=\"containerHold\">\n    <div className=\"container\"> {console.log('render')}\n    {randomEmoji.map((e,i)=> <div key={i}> {e} </div>)}\n\n    <button onClick={()=>dispatch({type:\"REF\"})}> Try!  </button>\n    </div>\n    <h1> Score = {score.current} </h1>\n    </div>\n  )\n}","import React from 'react';\nimport './css/main.css'\nimport { Main } from './Main';\nimport { Provider } from './UC';\nfunction App() {\n\n  return (\n    <div className='main'>\n    <h1 className='header'> Slot Game </h1>\n    <Provider>\n    <Main />\n    </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}